0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/heroku/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.10.10
3 info using node@v7.10.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/amit/Code/junk/ApiAiRecognizer',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/amit/.npm/Botbuilder-ApiAiRecognizer/1.0.0/package.tgz not in flight; packing
9 verbose correctMkdir /home/amit/.npm correctMkdir not in flight; initializing
10 info lifecycle Botbuilder-ApiAiRecognizer@1.0.0~prepublish: Botbuilder-ApiAiRecognizer@1.0.0
11 silly lifecycle Botbuilder-ApiAiRecognizer@1.0.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/home/amit/.npm/Botbuilder-ApiAiRecognizer/1.0.0/package.tgz',
12 verbose tar pack   '/home/amit/Code/junk/ApiAiRecognizer' ]
13 verbose tarball /home/amit/.npm/Botbuilder-ApiAiRecognizer/1.0.0/package.tgz
14 verbose folder /home/amit/Code/junk/ApiAiRecognizer
15 verbose addLocalTarball adding from inside cache /home/amit/.npm/Botbuilder-ApiAiRecognizer/1.0.0/package.tgz
16 verbose correctMkdir /home/amit/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd Botbuilder-ApiAiRecognizer@1.0.0
18 verbose afterAdd /home/amit/.npm/Botbuilder-ApiAiRecognizer/1.0.0/package/package.json not in flight; writing
19 verbose correctMkdir /home/amit/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /home/amit/.npm/Botbuilder-ApiAiRecognizer/1.0.0/package/package.json written
21 silly publish { name: 'Botbuilder-ApiAiRecognizer',
21 silly publish   version: '1.0.0',
21 silly publish   description: 'A module to use api.ai for NLU in microsoft bot framework instead of LUIS',
21 silly publish   main: 'index.js',
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/amitbend/ApiAiRecognizer.git' },
21 silly publish   keywords:
21 silly publish    [ 'api.ai',
21 silly publish      'luis',
21 silly publish      'microsoft',
21 silly publish      'bot',
21 silly publish      'framework',
21 silly publish      'chatbots',
21 silly publish      'nlp' ],
21 silly publish   author: { name: 'Amit Ben Dor' },
21 silly publish   license: 'MIT',
21 silly publish   bugs: { url: 'https://github.com/amitbend/ApiAiRecognizer/issues' },
21 silly publish   homepage: 'https://github.com/amitbend/ApiAiRecognizer#readme',
21 silly publish   dependencies: { apiai: '^4.0.1', uuid: '^3.0.1' },
21 silly publish   readme: '# API.ai Recoginzer for Microsoft Botframework \n\n### Based on: https://github.com/GanadiniAkshay/ApiAiRecognizer\n\n\n## Installation\n\nnpm install Botbuilder-ApiAiRecognizer\n\n## Usage\n&nbsp;&nbsp;&nbsp;&nbsp;var builder = require(\'botbuilder\');  \n&nbsp;&nbsp;&nbsp;&nbsp;var connector = new builder.ConsoleConnector().listen();  \n\n&nbsp;&nbsp;&nbsp;&nbsp;var bot       = new builder.UniversalBot(connector);  \n\n&nbsp;&nbsp;&nbsp;&nbsp;var apiairecognizer = require(\'api-ai-recognizer\');  \n&nbsp;&nbsp;&nbsp;&nbsp;var recognizer      = new apiairecognizer(<api.ai client access token>);  \n\n&nbsp;&nbsp;&nbsp;&nbsp;var intents = new builder.IntentDialog({  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    recognizers: [recognizer];  \n&nbsp;&nbsp;&nbsp;&nbsp;});  \n\n&nbsp;&nbsp;&nbsp;&nbsp;bot.dialog(\'/\',intents);  \n\n&nbsp;&nbsp;&nbsp;&nbsp;intents.matches(\'intent.name\',function(session,args){  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    session.send("your response");  \n&nbsp;&nbsp;&nbsp;&nbsp;});\n\n## Using Entities\n\nEntities can be found in the args.entities object and can be retrieved using code like below:  \n  \n&nbsp;&nbsp;&nbsp;&nbsp;var city = builder.EntityRecognizer.findEntity(args.entities, \'city\');  \n\nThe schema for each entity retrieved with the about method is as below:  \n\n&nbsp;&nbsp;&nbsp;&nbsp; {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  entity: \'entity value\',  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  type  : \'entity name\',   \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  startIndex: \'start index of entity\',   \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  endIndex:   \'end index of entity\',  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  score:   1   \n&nbsp;&nbsp;&nbsp;&nbsp; }\n\n\n## Using Fulfillment\n\napi.ai provides fulfillment which can be useful if you are using domains for your chat agent  \n\nFulfillments are available as entitities with the entity name as fulfillment and can be used like below:  \n\n&nbsp;&nbsp;&nbsp;&nbsp; var fulfillment = builder.EntityRecognizer.findEntity(args.entities, \'fulfillment\');  \n&nbsp;&nbsp;&nbsp;&nbsp; if (fulfillment) {  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var speech = fulfillment.entity;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; session.send(speech);  \n&nbsp;&nbsp;&nbsp;&nbsp; }\n\n\n## Using Prompts\n\nYou can use prompts provided by api.ai for required entities very easily. Just check the actionIncomplete entity from  \nthe entities list and if its true use the fulfillment to send out the prompt.\n\n## Added functionaliy\n`onEnabled()` function has been added.\n\n## Contributing\n\nAll feature requests, bug reprorts and pull requests are welcome!\n\n## License\n\nMIT\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'e44e29b3e9dd585736db9d9767e067e8dc5304b5',
21 silly publish   _id: 'Botbuilder-ApiAiRecognizer@1.0.0',
21 silly publish   _shasum: 'f2fcd52d7ccd9c6e2c39a535cd6e0a4011fe2e7b',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name Botbuilder-ApiAiRecognizer
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'Botbuilder-ApiAiRecognizer',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'Botbuilder-ApiAiRecognizer',
26 silly mapToRegistry   name: 'Botbuilder-ApiAiRecognizer',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/Botbuilder-ApiAiRecognizer
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /home/amit/.npm/Botbuilder-ApiAiRecognizer/1.0.0/package.tgz
30 verbose request uri https://registry.npmjs.org/Botbuilder-ApiAiRecognizer
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 11:09:17 AM
33 verbose request using bearer token for auth
34 verbose request id 7bfd8c74098a606e
35 http request PUT https://registry.npmjs.org/Botbuilder-ApiAiRecognizer
36 http 400 https://registry.npmjs.org/Botbuilder-ApiAiRecognizer
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '70',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Tue, 25 Jul 2017 08:09:19 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-hhn1549-HHN',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1500970158.218677,VS0,VE973',
37 verbose headers   vary: 'Accept-Encoding, Accept' }
38 verbose request invalidating /home/amit/.npm/registry.npmjs.org/Botbuilder-ApiAiRecognizer on PUT
39 error publish Failed PUT 400
40 verbose stack Error: "Botbuilder-ApiAiRecognizer" is invalid for new packages : Botbuilder-ApiAiRecognizer
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
40 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:194:7)
40 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:969:12)
41 verbose statusCode 400
42 verbose pkgid Botbuilder-ApiAiRecognizer
43 verbose cwd /home/amit/Code/junk/ApiAiRecognizer
44 error Linux 4.4.0-87-generic
45 error argv "/usr/local/heroku/bin/node" "/usr/local/bin/npm" "publish"
46 error node v7.10.0
47 error npm  v3.10.10
48 error code E400
49 error "Botbuilder-ApiAiRecognizer" is invalid for new packages : Botbuilder-ApiAiRecognizer
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
